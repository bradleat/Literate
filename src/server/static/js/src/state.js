// Generated by CoffeeScript 1.7.1
(function() {
  module.exports = function() {
    return App.state = {
      state: null,
      editor: null,
      editting: false,
      store: {
        code: {},
        markdown: {},
        literate: {}
      },
      openSettings: function() {
        if (this.editor != null) {
          return this.editor.showSettingsMenu();
        }
      },
      _startEditor: function() {
        this.editor = ace.edit('editor');
        window.editor = this.editor;
        $('#editor').hide();
        $('#editor').css('overflow-y', 'auto');
        return ace.require("ace/ext/settings_menu").init(editor);
      },
      saveOrRefresh: function(page, cb) {
        if (this.editting) {
          return $.ajax({
            type: "PUT",
            url: "/tangle/" + this.editting.page + "?mode=" + this.editting.mode,
            data: {
              "edit": this.editor.getValue()
            }
          }).done((function(_this) {
            return function(data) {
              return cb(_this.editting.mode, _this.editting.page);
            };
          })(this));
        } else if (this.state === 'literate') {
          return $.ajax({
            type: "PUT",
            url: "/tangle/" + page + "?mode=render"
          }).done((function(_this) {
            return function(data) {
              return cb('reload');
            };
          })(this));
        }
      },
      openEditor: function(page) {
        this.editting = {
          page: page,
          mode: this.state
        };
        $('#save-refresh-icon').removeClass("glyphicon-leaf");
        $('#save-refresh-icon').addClass("glyphicon-floppy-disk");
        if (this.editor == null) {
          this._startEditor();
        }
        $('#editor').css('min-height', $(window).height() * 0.85);
        if (this.state === 'code') {
          $('#editor').fadeIn("slow", function() {
            return $('#code-render-target').slideUp("slow");
          });
          this.editor.setValue(this.store[this.state][page].code);
          this.editor.session.setMode("ace/mode/" + this.store[this.state][page].type);
        } else if (this.state === 'markdown') {
          $('#editor').fadeIn("slow", function() {
            return $('#markdown-render-target').slideUp("slow");
          });
          this.editor.setValue(this.store[this.state][page]);
          this.editor.session.setMode("ace/mode/markdown");
        }
        $('#edit-button').fadeOut("fast", function() {
          $('#edit-icon').removeClass("glyphicon-pencil");
          $('#edit-icon').addClass("glyphicon-eject");
          return $('#edit-button').fadeIn("slow");
        });
        return this.editor.resize();
      },
      closeEditor: function() {
        $('#save-refresh-icon').removeClass("glyphicon-floppy-disk");
        $('#save-refresh-icon').addClass("glyphicon-leaf");
        this.editting = false;
        $('#editor').fadeOut("fast", function() {
          $('#markdown-render-target').slideDown("slow");
          return $('#code-render-target').slideDown("slow");
        });
        return $('#edit-button').fadeOut("fast", function() {
          $('#edit-icon').removeClass("glyphicon-eject");
          $('#edit-icon').addClass("glyphicon-pencil");
          return $('#edit-button').fadeIn("slow");
        });
      },
      toggleEditor: function(page) {
        if (this.editting) {
          if (this.editting.page === !page) {
            alert("warning");
          }
          return this.closeEditor(page);
        } else {
          return this.openEditor(page);
        }
      },
      toMarkdown: function(model, page) {
        if (page != null) {
          document.title = "" + page + " - markdown";
        }
        $('#markdown-tab').addClass('active');
        $('#literate-tab').removeClass('active');
        $('#code-tab').removeClass('active');
        $('#page-render-target').slideUp();
        $('#edit-button').fadeIn();
        $('#markdown-render-target').html(model.html);
        $('#markdown-render-target').children().find("code").each(function(i, block) {
          if ($(block).attr('class') != null) {
            return hljs.highlightBlock(block);
          }
        });
        this.state = "markdown";
        return this.store[this.state][page] = model.md;
      },
      toCode: function(model, page) {
        if (page != null) {
          document.title = "" + page + " - code";
        }
        $('#code-tab').addClass('active');
        $('#literate-tab').removeClass('active');
        $('#markdown-tab').removeClass('active');
        $('#page-render-target').slideUp();
        $('#edit-button').fadeIn();
        $('#code-render-target').html("<pre><code>" + model.code + "</code></pre>");
        $('#code-render-target').find("code").each(function(i, block) {
          return hljs.highlightBlock(block);
        });
        this.state = "code";
        return this.store[this.state][page] = model;
      },
      toLiterate: function(model, page) {
        if (page != null) {
          document.title = "" + page + " - literate";
        }
        $('#literate-tab').addClass('active');
        $('#markdown-tab').removeClass('active');
        $('#code-tab').removeClass('active');
        $('#page-render-target').slideDown();
        $('#edit-button').fadeOut();
        $('#page-render-target').html(model.html);
        $('#page-render-target').children().find("code").each(function(i, block) {
          if ($(block).attr('class') != null) {
            return hljs.highlightBlock(block);
          }
        });
        this.state = "literate";
        return this.store[this.state][page] = model.md;
      }
    };
  };

}).call(this);
